"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var merge_1 = require("lodash/merge");
var get_1 = require("lodash/get");
var set_1 = require("lodash/set");
var sync_fetch_1 = require("sync-fetch");
function getNonTeladocDictionaryTranslations(i18n, feature) {
    var currentLocale = i18n.locale;
    var fallbackLocales = i18n.locales.get(currentLocale) || [currentLocale];
    var nonTeladocTranslations = i18n.storage.nonTeladocTranslations();
    var nonTeladocDictionaryTranslations = {};
    fallbackLocales.forEach(function (fallbackLocale) {
        (0, set_1.default)(nonTeladocDictionaryTranslations, [fallbackLocale, feature], (0, get_1.default)(nonTeladocTranslations, [fallbackLocale, feature]));
    });
    return nonTeladocDictionaryTranslations;
}
function fetchDictionary(i18n, feature) {
    var params = {
        locale: i18n.locale,
        app: i18n.app(),
        feature: feature,
        country: i18n.country(),
        brand: i18n.brand(),
    };
    var response = (0, sync_fetch_1.default)("".concat(window.CMS_DICTIONARY_ENDPOINT_URL, "?").concat(new URLSearchParams(params)), {
        method: 'GET',
    });
    return response.ok ? response.json() : null;
}
function getTimestampsToStore(translations, feature) {
    var locales = Object.keys(translations);
    var timestampKeys = locales.map(function (locale) { return [locale, feature].join('.'); });
    var currentTime = Date.now().toString();
    var timestamps = {};
    timestampKeys.forEach(function (timestampKey) { timestamps[timestampKey] = currentTime; });
    return timestamps;
}
function addDictionaryToStore(i18n, translations, timestamps) {
    // Remove existing translations for some locales if present
    i18n.removeTranslationsForTimestampKeys((timestamps === null || timestamps === void 0 ? void 0 : timestamps.keys) || []);
    i18n.storage.removeTimestampsForTimestampKeys((timestamps === null || timestamps === void 0 ? void 0 : timestamps.keys) || []);
    i18n.storage.storeTranslations(translations);
    if (timestamps !== null) {
        i18n.storage.storeTimestamps(timestamps);
    }
}
function storeDictionary(i18n, feature) {
    // Check if dictionary name is in storage timestamps and don't make requests if it's there
    if ("".concat(i18n.locale, ".").concat(feature) in i18n.storage.timestamps()) {
        return;
    }
    var dictionaryResponse = fetchDictionary(i18n, feature);
    var nonTeladocTranslations = {};
    if (i18n.hasNonTeladocTranslations) {
        nonTeladocTranslations = getNonTeladocDictionaryTranslations(i18n, feature);
    }
    if (dictionaryResponse !== null) {
        addDictionaryToStore(i18n, (0, merge_1.default)(nonTeladocTranslations, dictionaryResponse), getTimestampsToStore(dictionaryResponse, feature));
    }
    else {
        addDictionaryToStore(i18n, nonTeladocTranslations, null);
    }
}
exports.default = storeDictionary;
