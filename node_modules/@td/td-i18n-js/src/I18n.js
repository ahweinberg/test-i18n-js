"use strict";
/* eslint no-underscore-dangle: ["error", { "allow": ["_hasNonTeladocTranslations"] }] */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var i18n_js_1 = require("i18n-js");
var fetchNonTeladocTranslations_1 = require("./cms/fetchNonTeladocTranslations");
var storeDictionary_1 = require("./cms/storeDictionary");
var invalidateTranslations_1 = require("./cms/invalidateTranslations");
var storage_1 = require("./storage");
var I18n = /** @class */ (function (_super) {
    __extends(I18n, _super);
    function I18n(metadata, nonTeladocTranslationsHash, translations, options) {
        if (nonTeladocTranslationsHash === void 0) { nonTeladocTranslationsHash = ''; }
        if (translations === void 0) { translations = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, translations, options) || this;
        _this.storage = new storage_1.default();
        _this.setMetadata(metadata);
        if (nonTeladocTranslationsHash !== '') {
            (0, fetchNonTeladocTranslations_1.default)(_this, nonTeladocTranslationsHash);
            _this._hasNonTeladocTranslations = true;
        }
        else {
            _this._hasNonTeladocTranslations = false;
        }
        (0, invalidateTranslations_1.default)(_this);
        _this.translations = _this.storage.translations();
        return _this;
    }
    I18n.prototype.translate = function (scope, options) {
        var feature = this.getFeatureFromScope(scope);
        this.storeDictionary(feature);
        return _super.prototype.translate.call(this, scope, options);
    };
    I18n.prototype.pluralize = function (count, scope, options) {
        var feature = this.getFeatureFromScope(scope);
        this.storeDictionary(feature);
        return _super.prototype.pluralize.call(this, count, scope, options);
    };
    I18n.prototype.localize = function (type, value, options) {
        if (type === 'number') {
            this.storeDictionary('number');
        }
        return _super.prototype.localize.call(this, type, value, options);
    };
    I18n.prototype.toTime = function (scope, input) {
        var feature = this.getFeatureFromScope(scope);
        this.storeDictionary(feature);
        return _super.prototype.toTime.call(this, scope, input);
    };
    I18n.prototype.numberToCurrency = function (input, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('number');
        return _super.prototype.numberToCurrency.call(this, input, options);
    };
    I18n.prototype.numberToPercentage = function (input, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('number');
        return _super.prototype.numberToPercentage.call(this, input, options);
    };
    I18n.prototype.numberToHumanSize = function (input, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('number');
        return _super.prototype.numberToHumanSize.call(this, input, options);
    };
    I18n.prototype.numberToHuman = function (input, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('number');
        return _super.prototype.numberToHuman.call(this, input, options);
    };
    I18n.prototype.strftime = function (date, format, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('date');
        this.storeDictionary('time');
        return _super.prototype.strftime.call(this, date, format, options);
    };
    I18n.prototype.toSentence = function (items, options) {
        if (options === void 0) { options = {}; }
        this.storeDictionary('support');
        return _super.prototype.toSentence.call(this, items, options);
    };
    I18n.prototype.timeAgoInWords = function (fromTime, toTime, options) {
        if (options === void 0) { options = {}; }
        var feature = this.getFeatureFromScope(options.scope || 'datetime.distance_in_words');
        this.storeDictionary(feature);
        return _super.prototype.timeAgoInWords.call(this, fromTime, toTime, options);
    };
    I18n.prototype.get = function (scope) {
        var feature = this.getFeatureFromScope(scope);
        this.storeDictionary(feature);
        return _super.prototype.get.call(this, scope);
    };
    I18n.prototype.getFeatureFromScope = function (scope) {
        var feature = '';
        // Deal with string scopes.
        if (scope instanceof String || typeof scope === 'string') {
            feature = scope.split(this.defaultSeparator)[0];
        }
        // Deal with the scope as an array.
        if (scope instanceof Array) {
            feature = scope[0];
        }
        return feature;
    };
    I18n.prototype.setMetadata = function (metadata) {
        var valueChanged = this.storage.setMetadata(metadata);
        if (valueChanged) {
            this.storage.clearTranslations();
            this.translations = {};
        }
    };
    I18n.prototype.loadingFromRedis = function () {
        return this.storage.loadingFromRedis() === 'true';
    };
    I18n.prototype.app = function () {
        return this.storage.app() || '';
    };
    I18n.prototype.country = function () {
        return this.storage.country() || '';
    };
    I18n.prototype.brand = function () {
        return this.storage.brand() || '';
    };
    Object.defineProperty(I18n.prototype, "hasNonTeladocTranslations", {
        get: function () {
            return this._hasNonTeladocTranslations;
        },
        enumerable: false,
        configurable: true
    });
    I18n.prototype.storeDictionary = function (feature) {
        (0, storeDictionary_1.default)(this, feature);
        this.translations = this.storage.translations();
    };
    I18n.prototype.removeTranslationsForTimestampKeys = function (timestampKeys) {
        this.translations = this.storage.removeTranslationsForTimestampKeys(timestampKeys);
    };
    return I18n;
}(i18n_js_1.I18n));
exports.default = I18n;
